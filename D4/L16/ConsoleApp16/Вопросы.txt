•	Где и как используется класс object? 
	Это базовый класс для всех типов. Используется для хранения значений любого типа.
•	Какие члены и включает в себя класс object? 
	Equals(object obj): Определяет, равен ли текущий объект другому объекту.
	GetHashCode(): Возвращает хэш-код для текущего объекта.
	GetType(): Возвращает тип текущего экземпляра.
	ToString(): Возвращает строку, представляющую текущий объект.
	Finalize(): Позволяет объекту попытаться освободить ресурсы и выполнить другие операции очистки перед тем, как он будет уничтожен сборщиком мусора.
	MemberwiseClone(): Создает поверхностную копию текущего объекта.
•	Что такое клонирование и какие его виды бывают? 
	Клонирование - создание копии объекта. Поверхностное (сам объект и ссылки на него, изменения повлияют на объект) и глубокое (сам объект и все объекты, на которые ссылаются его поля, изменения в копии не повлияют на основной объект).
•	В чем разница между поверхностным и глубоким клонированием? 
•	Где и как используется интерфейс ICloneable? 
	Используется для создания копии объекта. Определяет метод Clone(), который возвращает копию объекта.
•	Какие члены и включает в себя интерфейс ICloneable? 
	Clone(): Создает новый объект, который является копией текущего экземпляра.
•	Назовите основных участников паттерна Prototype и связи отношений между ними. 
	Prototype: определяет интерфейс для клонирования себя.
	ConcretePrototype: реализует интерфейс Prototype.
	Client: создает новый объект, используя метод Clone() объекта ConcretePrototype.
•	Что такое перегрузка операторов? 
	Возможность определить свою реализацию операторов для пользовательских типов.
•	Как выполняется перегрузка операторов? 
	Переопределение статическое, ключевое слово operator.
	public static int operator -(MyDate d1, MyDate d2)
    {
        DateTime date1 = new DateTime(d1.Year, d1.Month, d1.Day);
        DateTime date2 = new DateTime(d2.Year, d2.Month, d2.Day);
        return (int)(date1 - date2).TotalDays;
    }
